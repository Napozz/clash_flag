{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///home/napo/projects/clash_flag/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport countries from \"../../public/countries.json\";\nimport Header from \"./Header\";\nimport FlagGame from \"./FlagGame\";\n\ninterface Country {\n  id: string;\n  enabled: boolean;\n  code3l: string;\n  code2l: string;\n  name: string;\n  name_official: string;\n  center: {\n    latitude: string;\n    longitude: string;\n    zoom: string;\n  };\n  names: {\n    [key: string]: {\n      name: string;\n      name_official: string;\n    };\n  };\n}\n\nexport default function GuessFlagGame() {\n  const [userGuess, setUserGuess] = useState<string>(\"\");\n  const [lives, setLives] = useState<number>(3);\n  const [score, setScore] = useState<number>(0);\n  const [language, setLanguage] = useState<string>(\"en\");\n\n  const flags = (countries as Country[]).map((country) => ({\n    name: country.name,\n    code2l: country.code2l,\n    names: country.names,\n  }));\n\n  return (\n    <div className=\"flex flex-col items-center min-h-screen p-8\">\n      <Header language={language} setLanguage={setLanguage} />\n      <FlagGame\n        flags={flags}\n        userGuess={userGuess}\n        setUserGuess={setUserGuess}\n        setLives={setLives}\n        setScore={setScore}\n        lives={lives}\n        score={score}\n        language={language}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;;;;;;;;;AAHA;;;;;;AA2Be,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACnD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEjD,MAAM,QAAQ,AAAC,2FAAA,CAAA,UAAS,CAAe,GAAG,CAAC,CAAC,UAAY,CAAC;YACvD,MAAM,QAAQ,IAAI;YAClB,QAAQ,QAAQ,MAAM;YACtB,OAAO,QAAQ,KAAK;QACtB,CAAC;IAED,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,UAAU;gBAAU,aAAa;;;;;;0BACzC,8OAAC;gBACC,OAAO;gBACP,WAAW;gBACX,cAAc;gBACd,UAAU;gBACV,UAAU;gBACV,OAAO;gBACP,OAAO;gBACP,UAAU;;;;;;;;;;;;AAIlB"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}