{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///home/napo/projects/clash_flag/src/app/page.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport Image from \"next/image\";\nimport countries from \"../../public/countries.json\";\n\nexport default function GuessFlagGame() {\n  const [currentFlagIndex, setCurrentFlagIndex] = useState(0);\n  const [userGuess, setUserGuess] = useState(\"\");\n  const [lives, setLives] = useState(3);\n  const [score, setScore] = useState(0);\n\n  const flags = countries.map((country) => ({\n    name: country.name,\n    code2l: country.code2l,\n  }));\n\n  const handleGuess = () => {\n    if (\n      userGuess.toLowerCase() === flags[currentFlagIndex].name.toLowerCase()\n    ) {\n      setScore(score + 1);\n      setCurrentFlagIndex((currentFlagIndex + 1) % flags.length);\n    } else {\n      setLives(lives - 1);\n      if (lives - 1 === 0) {\n        alert(\"Game Over! Your score: \" + score);\n        setLives(3);\n        setScore(0);\n        setCurrentFlagIndex(0);\n      }\n    }\n    setUserGuess(\"\");\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-8\">\n      <h1 className=\"text-2xl font-bold mb-4\">Guess the Flag</h1>\n      <Image\n        src={`/flags/${flags[currentFlagIndex].code2l.toLowerCase()}.svg`}\n        alt=\"Flag\"\n        width={200}\n        height={100}\n        className=\"mb-4\"\n      />\n      <input\n        type=\"text\"\n        value={userGuess}\n        onChange={(e) => setUserGuess(e.target.value)}\n        className=\"border p-2 mb-4\"\n        placeholder=\"Enter country name\"\n      />\n      <button\n        onClick={handleGuess}\n        className=\"bg-blue-500 text-white p-2 rounded\"\n      >\n        Submit Guess\n      </button>\n      <div className=\"mt-4\">\n        <p>Lives: {lives}</p>\n        <p>Score: {score}</p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACtB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,QAAQ,2FAAA,CAAA,UAAS,CAAC,GAAG,CAAC,CAAC,UAAY,CAAC;YACxC,MAAM,QAAQ,IAAI;YAClB,QAAQ,QAAQ,MAAM;QACxB,CAAC;IAED,MAAM,cAAc;QAClB,IACE,UAAU,WAAW,OAAO,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,IACpE;YACA,SAAS,QAAQ;YACjB,oBAAoB,CAAC,mBAAmB,CAAC,IAAI,MAAM,MAAM;QAC3D,OAAO;YACL,SAAS,QAAQ;YACjB,IAAI,QAAQ,MAAM,GAAG;gBACnB,MAAM,4BAA4B;gBAClC,SAAS;gBACT,SAAS;gBACT,oBAAoB;YACtB;QACF;QACA,aAAa;IACf;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC,6HAAA,CAAA,UAAK;gBACJ,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;gBACjE,KAAI;gBACJ,OAAO;gBACP,QAAQ;gBACR,WAAU;;;;;;0BAEZ,8OAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;gBAC5C,WAAU;gBACV,aAAY;;;;;;0BAEd,8OAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;0BAGD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;4BAAE;4BAAQ;;;;;;;kCACX,8OAAC;;4BAAE;4BAAQ;;;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}